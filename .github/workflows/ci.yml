name: Run Tests and Generate Docker Images

on:
  push:
    branches:
      - 'HU/**'
  pull_request:
    types:
      - opened
    branches:
      - 'HU/**'
      - 'develop'

jobs:
  common-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install -g codecov
      - name: Set up corepack
        run: corepack enable

  authorizer-tests:
    needs: common-setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: authorizer
    steps:
      - name: Install authorizer dependencies
        run: npm install
      - name: Run tests and generate coverage report
        run: |
          npm run test -- --coverage
          codecov
      - name: Check coverage and generate Docker image
        run: |
          COVERAGE_THRESHOLD=80
          ACTUAL_COVERAGE=$(awk -F'"' '/lines/ {print $2}' coverage/coverage-summary.json)
          if (( $(bc <<< "$ACTUAL_COVERAGE < $COVERAGE_THRESHOLD") )); then
            echo "Test coverage is below $COVERAGE_THRESHOLD%"
            exit 1
          else
            echo "Test coverage is above $COVERAGE_THRESHOLD%"
            echo "Generating Docker image..."
            # Generate Docker image here
            # Replace the following line with your Docker image build commands
            # docker build -t your-image-name .
          fi

  web-tests:
    needs: common-setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - name: Install web dependencies
        run: pnpm install
      - name: Run tests and generate coverage report
        run: |
          pnpm test -- --coverage
          codecov
      - name: Check coverage and generate Docker image
        run: |
          COVERAGE_THRESHOLD=80
          ACTUAL_COVERAGE=$(awk -F'"' '/lines/ {print $2}' coverage/coverage-summary.json)
          if (( $(bc <<< "$ACTUAL_COVERAGE < $COVERAGE_THRESHOLD") )); then
            echo "Test coverage is below $COVERAGE_THRESHOLD%"
            exit 1
          else
            echo "Test coverage is above $COVERAGE_THRESHOLD%"
            echo "Generating Docker image..."
            # Generate Docker image here
            # Replace the following line with your Docker image build commands
            # docker build -t your-image-name .
          fi
